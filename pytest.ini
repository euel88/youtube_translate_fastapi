# YouTube Translator pytest 설정
# 테스트 실행 시 기본 옵션과 동작을 정의합니다

[tool:pytest]
# 최소 Python 버전
minversion = 6.0

# 테스트 파일 패턴
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 테스트 디렉토리
testpaths = tests

# 추가 옵션
addopts = 
    # 상세한 출력
    -v
    # 경고를 에러로 처리
    --strict-markers
    # 테스트 실행 시간 표시
    --durations=10
    # 코드 커버리지
    --cov=app
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    # 실패한 테스트 요약
    --tb=short
    # 병렬 실행 (pytest-xdist 필요)
    # -n auto
    # 색상 출력
    --color=yes
    # 캡처 비활성화 (디버깅 시 유용)
    # -s
    
# 마커 정의 (테스트 그룹화)
markers =
    unit: 단위 테스트
    integration: 통합 테스트
    performance: 성능 테스트
    slow: 느린 테스트 (5초 이상)
    requires_api_key: API 키가 필요한 테스트
    skip_ci: CI에서 건너뛸 테스트

# 테스트 타임아웃 (초)
timeout = 300
timeout_method = thread

# 비동기 테스트 설정
asyncio_mode = auto

# 경고 필터
filterwarnings =
    # 기본적으로 모든 경고 표시
    default
    # DeprecationWarning 무시
    ignore::DeprecationWarning
    # 특정 라이브러리 경고 무시
    ignore::UserWarning:google.*

# 로그 설정
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 커버리지 설정
[coverage:run]
source = app
branch = True
omit = 
    */tests/*
    */migrations/*
    */__init__.py
    */config.py

[coverage:report]
# 최소 커버리지 (%)
fail_under = 80
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # 기본 제외 패턴
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

[coverage:html]
directory = htmlcov

# 환경 변수 설정 (테스트용)
[tool:pytest:env]
ENVIRONMENT = test
GEMINI_API_KEY = test-api-key
DATABASE_URL = sqlite:///:memory:
REDIS_URL = redis://localhost:6379/1
SECRET_KEY = test-secret-key-for-testing-only
