# YouTube Translator Nginx 설정
# FastAPI 서버를 위한 리버스 프록시 설정

# 사용자 및 프로세스 설정
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 이벤트 블록
events {
    worker_connections 1024;
    use epoll;  # Linux에서 최적화
}

# HTTP 블록
http {
    # 기본 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 로그 포맷
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;  # 큰 파일 업로드 허용
    
    # Gzip 압축
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;
    
    # 업스트림 설정 (FastAPI 서버)
    upstream youtube_translator {
        server web:8000;  # Docker 컨테이너 이름:포트
        keepalive 32;
    }
    
    # 속도 제한 설정
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static_limit:10m rate=50r/s;
    
    # HTTP 서버 블록
    server {
        listen 80;
        server_name localhost;  # 실제 도메인으로 변경
        
        # HTTP를 HTTPS로 리다이렉트 (프로덕션)
        # return 301 https://$server_name$request_uri;
        
        # 루트 설정
        root /usr/share/nginx/html;
        
        # 정적 파일 서빙
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 7d;
            add_header Cache-Control "public, immutable";
            limit_req zone=static_limit burst=20 nodelay;
        }
        
        # 파비콘
        location /favicon.ico {
            alias /usr/share/nginx/html/static/favicon.png;
            expires 30d;
            access_log off;
        }
        
        # API 프록시
        location /api/ {
            proxy_pass http://youtube_translator;
            proxy_http_version 1.1;
            
            # 헤더 설정
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 타임아웃 설정 (긴 번역 작업 고려)
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # 버퍼 설정
            proxy_buffering off;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # 속도 제한
            limit_req zone=api_limit burst=5 nodelay;
        }
        
        # WebSocket 지원 (실시간 기능용)
        location /ws/ {
            proxy_pass http://youtube_translator;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # 헬스체크
        location /health {
            proxy_pass http://youtube_translator/health;
            access_log off;
        }
        
        # 메인 애플리케이션
        location / {
            proxy_pass http://youtube_translator;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 에러 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # HTTPS 서버 블록 (프로덕션용)
    # server {
    #     listen 443 ssl http2;
    #     server_name yourdomain.com;
    #     
    #     # SSL 인증서
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL 설정
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # 나머지 설정은 HTTP 블록과 동일
    #     # ...
    # }
}

# 초보자를 위한 설명:
# 1. upstream: 백엔드 서버 그룹 정의
# 2. server: 가상 호스트 설정
# 3. location: URL 패턴별 처리 규칙
# 4. proxy_pass: 요청을 백엔드로 전달
# 5. limit_req: 속도 제한으로 DDoS 방어
